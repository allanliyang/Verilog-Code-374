# Reading C:/intelFPGA/18.1/modelsim_ase/tcl/vsim/pref.tcl
# do CPUPhase3_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Copying C:/intelFPGA/18.1/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/register32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:51 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/register32bit.v 
# -- Compiling module Register32bit
# ** Warning: D:/Verilog-Code-374/register32bit.v(1): (vlog-2600) [RDGN] - Redundant digits in numeric literal.
# 
# Top level modules:
# 	Register32bit
# End time: 13:13:51 on Mar 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/R0.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:51 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/R0.v 
# -- Compiling module R0
# 
# Top level modules:
# 	R0
# End time: 13:13:52 on Mar 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/MDR.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:52 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/MDR.v 
# -- Compiling module MDR
# 
# Top level modules:
# 	MDR
# End time: 13:13:52 on Mar 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/MAR.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:52 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/MAR.v 
# -- Compiling module MAR
# 
# Top level modules:
# 	MAR
# End time: 13:13:52 on Mar 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/InPort.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:52 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/InPort.v 
# -- Compiling module InPort
# 
# Top level modules:
# 	InPort
# End time: 13:13:52 on Mar 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/ALU.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:52 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/ALU.v 
# -- Compiling module ALU
# 
# Top level modules:
# 	ALU
# End time: 13:13:53 on Mar 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/SelectEncode.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:53 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/SelectEncode.v 
# -- Compiling module SelectEncode
# 
# Top level modules:
# 	SelectEncode
# End time: 13:13:53 on Mar 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/ConFFLogic.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:53 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/ConFFLogic.v 
# -- Compiling module ConFFLogic
# 
# Top level modules:
# 	ConFFLogic
# End time: 13:13:53 on Mar 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/Datapath.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:53 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/Datapath.v 
# -- Compiling module Datapath
# 
# Top level modules:
# 	Datapath
# End time: 13:13:53 on Mar 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/ControlUnit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:53 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/ControlUnit.v 
# -- Compiling module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 13:13:54 on Mar 25,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/Bus.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:54 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/Bus.v 
# -- Compiling module Bus
# 
# Top level modules:
# 	Bus
# End time: 13:13:54 on Mar 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/RAM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:54 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/RAM.v 
# -- Compiling module RAM
# 
# Top level modules:
# 	RAM
# End time: 13:13:54 on Mar 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+D:/Verilog-Code-374 {D:/Verilog-Code-374/datapath_tb.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:13:54 on Mar 25,2024
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+D:/Verilog-Code-374" D:/Verilog-Code-374/datapath_tb.v 
# -- Compiling module datapath_tb
# 
# Top level modules:
# 	datapath_tb
# End time: 13:13:54 on Mar 25,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  datapath_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" datapath_tb 
# Start time: 13:13:54 on Mar 25,2024
# Loading work.datapath_tb
# Loading work.Datapath
# Loading work.R0
# Loading work.Register32bit
# Loading work.MDR
# Loading work.MAR
# Loading work.InPort
# Loading work.Bus
# Loading work.ALU
# Loading work.RAM
# Loading work.SelectEncode
# Loading work.ConFFLogic
# Loading work.ControlUnit
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run 10 us
# Checking first two bits for multiplication
# Recoded B[1:0] to -1
# ALU_Result = 1111111111111111111111111111111111111111111111111111111111100101
# Checking rest of bits for multiplication
# Recoded to -1
# ALU_Result = 1111111111111111111111111111111111111111111111111111111101111001, ffffffffffffff79
# Recoded to +2
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Checking first two bits for multiplication
# Recoded B[1:0] to -2
# ALU_Result = 1111111111111111111111111111111111111111111111111111111111001010
# Checking rest of bits for multiplication
# Recoded to +2
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# M = 00000000000000000000000000011011
# B = 00000000000000000000000000011011
# DIV_A = 000000000000000000000000000000000, Q = 00000000000000000000000000110110
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000000001101100
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000000011011000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000000110110000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000001101100000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000011011000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000110110000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000001101100000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000011011000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000110110000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000001101100000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000011011000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000110110000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000001101100000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000011011000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000110110000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000001101100000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000011011000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000110110000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000001101100000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000011011000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000110110000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00001101100000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00011011000000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00110110000000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 01101100000000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 11011000000000000000000000000000
# DIV_A = 111111111111111111111111111001011, Q = 10110000000000000000000000000000
# DIV_A = 111111111111111111111111111001101, Q = 01100000000000000000000000000000
# DIV_A = 111111111111111111111111111010000, Q = 11000000000000000000000000000000
# DIV_A = 111111111111111111111111111010111, Q = 10000000000000000000000000000000
# DIV_A = 111111111111111111111111111100101, Q = 00000000000000000000000000000000
# M = 00000000000000000000000000000110
# B = 00000000000000000000000000000110
# DIV_A = 000000000000000000000000000000000, Q = 00000000000000000000000000110110
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000000001101100
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000000011011000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000000110110000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000001101100000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000011011000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000110110000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000001101100000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000011011000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000110110000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000001101100000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000011011000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000110110000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000001101100000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000011011000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000110110000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000001101100000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000011011000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000110110000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000001101100000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000011011000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000110110000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00001101100000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00011011000000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00110110000000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 01101100000000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 11011000000000000000000000000000
# DIV_A = 111111111111111111111111111110101, Q = 10110000000000000000000000000000
# DIV_A = 111111111111111111111111111110111, Q = 01100000000000000000000000000000
# DIV_A = 111111111111111111111111111111010, Q = 11000000000000000000000000000000
# DIV_A = 000000000000000000000000000000001, Q = 10000000000000000000000000000010
# DIV_A = 111111111111111111111111111110111, Q = 00000000000000000000000000000100
# DIV_A_i = 111111111111111111111111111111101
# DIV_A_f = 000000000000000000000000000000011
add wave -position end  sim:/datapath_tb/DUT/IR/q
add wave -position end  sim:/datapath_tb/DUT/Zlow/q
add wave -position end  sim:/datapath_tb/DUT/PC/q
add wave -position end  sim:/datapath_tb/DUT/MDR/q
add wave -position end  sim:/datapath_tb/DUT/MAR/q
add wave -position end  sim:/datapath_tb/DUT/R0/q
add wave -position end  sim:/datapath_tb/DUT/R1/q
add wave -position end  sim:/datapath_tb/DUT/R2/q
add wave -position end  sim:/datapath_tb/DUT/R3/q
add wave -position end  sim:/datapath_tb/DUT/R4/q
add wave -position end  sim:/datapath_tb/DUT/R5/q
add wave -position end  sim:/datapath_tb/DUT/R6/q
add wave -position end  sim:/datapath_tb/DUT/R7/q
add wave -position end  sim:/datapath_tb/DUT/R8/q
add wave -position end  sim:/datapath_tb/DUT/R9/q
add wave -position end  sim:/datapath_tb/DUT/R10/q
add wave -position end  sim:/datapath_tb/DUT/R11/q
add wave -position end  sim:/datapath_tb/DUT/R12/q
add wave -position end  sim:/datapath_tb/DUT/R13/q
add wave -position end  sim:/datapath_tb/DUT/R14/q
add wave -position end  sim:/datapath_tb/DUT/R15/q
add wave -position end  sim:/datapath_tb/DUT/HI/q
add wave -position end  sim:/datapath_tb/DUT/LO/q
add wave -position end  sim:/datapath_tb/DUT/CU/run
restart -f
run
# GetModuleFileName: The specified module could not be found.
# 
# 
# Checking first two bits for multiplication
# Recoded B[1:0] to -1
# ALU_Result = 1111111111111111111111111111111111111111111111111111111111100101
# Checking rest of bits for multiplication
# Recoded to -1
# ALU_Result = 1111111111111111111111111111111111111111111111111111111101111001, ffffffffffffff79
# Recoded to +2
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000001011011001, 00000000000002d9
# Checking first two bits for multiplication
# Recoded B[1:0] to -2
# ALU_Result = 1111111111111111111111111111111111111111111111111111111111001010
# Checking rest of bits for multiplication
# Recoded to +2
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# Recoded to 0
# ALU_Result = 0000000000000000000000000000000000000000000000000000000010100010, 00000000000000a2
# M = 00000000000000000000000000011011
# B = 00000000000000000000000000011011
# DIV_A = 000000000000000000000000000000000, Q = 00000000000000000000000000110110
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000000001101100
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000000011011000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000000110110000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000001101100000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000011011000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000000110110000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000001101100000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000011011000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000000110110000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000001101100000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000011011000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000000110110000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000001101100000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000011011000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000000110110000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000001101100000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000011011000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000000110110000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000001101100000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000011011000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00000110110000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00001101100000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00011011000000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 00110110000000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 01101100000000000000000000000000
# DIV_A = 111111111111111111111111111001010, Q = 11011000000000000000000000000000
# DIV_A = 111111111111111111111111111001011, Q = 10110000000000000000000000000000
# DIV_A = 111111111111111111111111111001101, Q = 01100000000000000000000000000000
# DIV_A = 111111111111111111111111111010000, Q = 11000000000000000000000000000000
# DIV_A = 111111111111111111111111111010111, Q = 10000000000000000000000000000000
# DIV_A = 111111111111111111111111111100101, Q = 00000000000000000000000000000000
# M = 00000000000000000000000000000110
# B = 00000000000000000000000000000110
# DIV_A = 000000000000000000000000000000000, Q = 00000000000000000000000000110110
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000000001101100
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000000011011000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000000110110000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000001101100000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000011011000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000000110110000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000001101100000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000011011000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000000110110000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000001101100000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000011011000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000000110110000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000001101100000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000011011000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000000110110000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000001101100000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000011011000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000000110110000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000001101100000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000011011000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00000110110000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00001101100000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00011011000000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 00110110000000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 01101100000000000000000000000000
# DIV_A = 111111111111111111111111111110100, Q = 11011000000000000000000000000000
# DIV_A = 111111111111111111111111111110101, Q = 10110000000000000000000000000000
# DIV_A = 111111111111111111111111111110111, Q = 01100000000000000000000000000000
# DIV_A = 111111111111111111111111111111010, Q = 11000000000000000000000000000000
# DIV_A = 000000000000000000000000000000001, Q = 10000000000000000000000000000010
# DIV_A = 111111111111111111111111111110111, Q = 00000000000000000000000000000100
# DIV_A_i = 111111111111111111111111111111101
# DIV_A_f = 000000000000000000000000000000011
# End time: 13:24:14 on Mar 25,2024, Elapsed time: 0:10:20
# Errors: 0, Warnings: 0
