// this files holds opcode for different test cases and instructions


// ----- LD instructions -----//
// Instruction: ld R2,0x95
// stores contents at ram address 0x95 into R2
// 00000 0010 0000 0000000000010010101
// op		 r2   r0		      C(0x95)(d149)
// 01000095

// Instruction: ld R0, 0x38(R2)
// stores contents at ram address 0x38+R2 into R0
// 00000 0000 0010 0000000000000111000
// op     r0   r2         C(0x38)(d56)
// 00100038



// ----- LDI instructions -----//
// Instruction: ldi R2,0x95
// stores 0x95 into R2
// 00001 0010 0000 0000000000010010101
// op    r2   r0       C(0x95)
// 09000095

// Instruction: ldi R0, 0x38(R2)
// stores 0x38+R2 into R0
// 00001 0000 0010 0000000000000111000
// op    r0   r2     C(0x38)
// 08100038



// ----- ST instructions -----//
// Instruction: ldi R1, 0x43 (used for preloading R1)
// stores 0x43 into R1
// 00001 0001 0000 0000000000000111000
// ldi    r1   r0    C(0x43)
// 08800043

// Instruction: st 0x87, R1
// stores contents of R1 into ram at address 0x87
// 00010 0001 0000 0000000000010000111
// st    r1    r0     0x87
// 10800087

// ----- Instruction: st 0x87(R1), R1
// stores contents of R1 into ram at address 0x87+(R1)
// 00010 0001 0001 0000000000010000111
// st    r1    r1       0x87
// 10880087



// ----- ADDI instructions -----//
// Instruction: ldi R3, 0xA (used for preloading R4)
// 00001 0100 0000 0000000000000001010
// ldi    R1     R0    0xA
// 0A00000A

// Instruction: addi R3, R4, -5
// 01100 0011 0100 1111111111111111011
// addi  R3    R4    19-bit 2's CMP of -5
// 61A7FFFB



// ----- ANDI instructions -----//
// Instruction: ldi R4, 0x50 (used for preloading R4)
// 00001 0100 0000 0000000000001010000
// ldi    R4   R0    0x50
// 0A000050

// Instruction: andi R3, R4, 0x53
// 01101 0011 0100 0000000000001010011
// andi   R3   R4   0x53
// 69A00053


// ----- ORI instructions -----//
// Instruction: ldi R4, 0xFF00 (used for preloading R4)
// 00001 0100 0000 0001111111100000000
// ldi    R4   R0    0x0FF00
// 0A00FF00

// Instruction: ori R3, R4, 0x53
// 01110 0011 0100 0000000000001010011
// ori   R3   R4       0x53
// 71A00053


// ----- BRANCH instructions -----//



// ----- JUMP instructions -----//
// Instruction: ldi R6, 0xF1
// 00001 0110 0000 0000000000011110001
// ldi	R6		R0			0xF1
// 0B0000F1

// Instruction: JAL R6
// stores contents of PC+1 into R15(return address), and then contents of R6 into PC
// 10101 0110 1111 0000000000000000000
// JAL 	R6		R15		unused
// AB780000


// Instruction: JR R15
// stores contents of R15 into PC
// 10100 1111 0000 0000000000000000000
// JR		R15	unused
// A7800000

